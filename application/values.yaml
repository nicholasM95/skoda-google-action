replicaCount: 1

image:
  repository: ghcr.io/nicholasm95/skoda-google-action
  pullPolicy: Always

imagePullSecrets:
  - name: "skoda-google-actions"
nameOverride: ""
fullnameOverride: "skoda-google-actions"

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations:
  vault.hashicorp.com/agent-inject: "true"
  vault.hashicorp.com/role: "skoda-google-actions"
  vault.hashicorp.com/agent-inject-secret-oauth2.properties: "skoda-google-actions/data/secret"
  vault.hashicorp.com/agent-inject-template-oauth2.properties: |
    {{ with secret "skoda-google-actions/data/secret" -}}
    spring.security.oauth2.resourceserver.jwt.issuer-uri={{ .Data.data.ISSUER_URI }}
    SKODA_EMAIL={{ .Data.data.SKODA_EMAIL }}
    SKODA_PASSWORD={{ .Data.data.SKODA_PASSWORD }}
    SKODA_PIN={{ .Data.data.SKODA_PIN }}
    SKODA_VIN={{ .Data.data.SKODA_VIN }}
    SKODA_API={{ .Data.data.SKODA_API }}
    {{- end }}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  runAsNonRoot: true
}

service:
  type: ClusterIP
  port: 8080

management:
  port: 8888

ingress:
  enabled: true
  className: "haproxy"
  annotations: {
    kubernetes.io/tls-acme: "true",
    cert-manager.io/cluster-issuer: letsencrypt
  }
  hosts:
    - host: skoda-google-actions.nicholasmeyers.be
      paths:
        - path: /
          pathType: Prefix
  tls:
    - secretName: skoda-google-actions-tls
      hosts:
        - skoda-google-actions.nicholasmeyers.be

resources:
  limits:
    cpu: 800m
    memory: 1024Mi
  requests:
    cpu: 400m
    memory: 750Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

tolerations: []

affinity: {}
